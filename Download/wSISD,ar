1
00:00:03,054 --> 00:00:09,019
أهلا بكم من جديد. سنلقي اليوم نظرة على
عدد من

2
00:00:09,019 --> 00:00:15,011
تطبيقات جداول الرموز وتراكيب أشجار
البحث الثنائي المثيرة للاهتمام؛

3
00:00:15,011 --> 00:00:21,413
وذلك بغرض مواجهة مشاكل معالجة البيانات الهندسية.
لنقم إذن بإلقاء نظرة عليها. الفكرة هي أننا

4
00:00:21,413 --> 00:00:27,378
سنتحدث هنا عن أشكال هندسية، وليس مفاتيح
بسيطة مثل

5
00:00:27,378 --> 00:00:33,338
الجمل النصيّة والأرقام. مثالاً على ذلك:
لنفرض أن الكائنات هنا هي نقاط

6
00:00:33,338 --> 00:00:38,346
على المستوى الإحداثي وأنك قمت بتحديد 
مستطيل على المحورين

7
00:00:38,346 --> 00:00:43,404
المحورين الأفقي والعمودي. قد تتساءل هنا:
أيّ هذه النقاط يقع داخل حدود

8
00:00:43,404 --> 00:00:48,200
المستطيل؟ أو ما هو عدد النقاط داخل
المستطيل؟ أو لربما أنك تقوم

9
00:00:48,200 --> 00:00:54,011
بمعالجة مستطيلات متعددة. لنقل أن لديك مجموعة
من المستطيلات، وتريد أن تعرف أيّ

10
00:00:54,011 --> 00:01:00,291
من هذه المستطيلات تتقاطع، أو كم عدد
التقاطعات بين المستطيلات. هذه

11
00:01:00,291 --> 00:01:05,837
مجموعة من المشاكل المثيرة للاهتمام، ويبنى
عليها الكثير والكثير من التطبيقات. ابتداء من

12
00:01:05,837 --> 00:01:11,806
التصميم المحوسب، مروراً بالألعاب والأفلام،
ووصولاً إلى التجريدات - أي البيانات المجرّدة - مثل

13
00:01:11,806 --> 00:01:17,849
قواعد البيانات أو أيّة حالات قد تتعامل فيها مع
مفاتيح متعددة أو أبعاد متعددة.

14
00:01:18,065 --> 00:01:24,856
وهي عبارة عن امتداد مهم للأفكار
التي رأيناها في جداول

15
00:01:24,856 --> 00:01:30,175
الرموز لكل أنواع التطبيقات المألوفة.
وأيضا - للمفاجأة - فإن أشجار

16
00:01:30,175 --> 00:01:34,300
البحث الثنائية وما يرتبط بها من
خوارزميات رأيناها سابقا ستقوم

17
00:01:34,300 --> 00:01:39,774
بتوفير حلول فعّالة جدا لعدد من
المشاكل المهمّة في هذا المجال.

18
00:01:39,774 --> 00:01:45,943
كما أنها قادت إلى عدد من التطورات الجديدة
والتقنيات الجديدة في جميع أنواع

19
00:01:45,943 --> 00:01:51,135
هذه التطبيقات. على أي حال ... حتى نبدأ علينا
أن نلقي نظرة على مشكلة بسيطة تسمى

20
00:01:51,135 --> 00:01:56,761
البحث المجالي في بعد واحد، والذي يشكل
قاعدة أساسية لما سنقوم

21
00:01:56,761 --> 00:02:02,146
بعمله. هذا البحث هو نوعا ما امتداد للواجهة
البرمجية لجدول الرموز المرتب

22
00:02:02,146 --> 00:02:07,837
الذي أعطيناه مسبقا، وسنقوم بإنشاء
عمليات بحث مجالي و عمليات

23
00:02:07,837 --> 00:02:12,797
عدّ مجالي. كلمة "بعد واحد" تعني هنا
أن لدينا مفتاحا واحدا، لذا سنقوم بإدخال

24
00:02:12,797 --> 00:02:19,116
أزواج مكوّنة من مفتاح وقيمة، وما نريده هو
أن نكون قادرين على البحث عن أيّ مفتاح

25
00:02:19,116 --> 00:02:24,770
والقيمة المرتبطة به، بالإضافة إلى أمكانية 
الحذف. لكننا بعد ذلك نريد هذه

26
00:02:24,770 --> 00:02:30,703
العمليات وهي البحث المجالي والعد المجالي.
بالتالي، إيجاد جميع المفاتيح الموجودة بين

27
00:02:30,703 --> 00:02:36,083
مفتاحين محددين، أو إيجاد عدد المفاتيح
الموجودة بين أي مفتاحين. في هذا

28
00:02:36,083 --> 00:02:42,251
المثال على جهة اليمين علينا أن نقوم بإدخال
 عدد من المفاتيح، والتي تظهر بصورة

29
00:02:42,251 --> 00:02:47,992
مرتبة. لكن بعد ذلك قد تسأل: كم هو 
عدد المفاتيح الموجودة 

30
00:02:47,992 --> 00:02:53,780
بين g و k؟ في هذه الحالة، هناك
اثنان فقط. وقد يتساءل الزبون بعدها

31
00:02:53,780 --> 00:02:59,598
حسنا، ما هما هذان المفتاحان؟ وهنا تريد
أن تكون قادرا على إرجاعهما. وهذه

32
00:02:59,598 --> 00:03:06,010
عملية شائعة كثيرا في قواعد البيانات مثلا. عندما
تريد إرجاع عدد دافعي الضرائب الذين يمتلكون

33
00:03:06,010 --> 00:03:11,335
دخلا يتراوح بين مليون وعشرة ملايين، 
وبعدها معرفة من هم هؤلاء

34
00:03:11,335 --> 00:03:17,431
وهلم جرا. لذا فإن البحث المجالي عملية
أساسية مهمة جدا. الآن، بالحديث عن

35
00:03:17,431 --> 00:03:23,459
التفسير الهندسي، فإننا نفكر بالمفاتيح
على أنها نقاط واقعة على خط. لذا

36
00:03:23,459 --> 00:03:29,627
فإن قيم المفاتيح معرّفة على أنها
نقاط على خط. قد نقوم بتحويل

37
00:03:29,627 --> 00:03:34,856
الحروف إلى أرقام، أو ربما تكون المفاتيح
أرقاما. وبعد ذلك، فإن ما

38
00:03:34,856 --> 00:03:41,119
نسعى إليه هو إيجاد أو عدّ هذه النقاط
في فترة محددة وفي بعد واحد. إذن

39
00:03:41,575 --> 00:03:47,272
كيف سنقوم بتطبيق ذلك؟ هذه
هي المشكلة الأساسية والتي

40
00:03:47,272 --> 00:03:52,356
تشبه إلى حد كبير مشكلة جدول الرموز.
يمكننا التفكير بإبقاء الأشياء في

41
00:03:52,356 --> 00:03:57,529
مصفوفة غير مرتبة. سنقوم فقط بوضعها
في مصفوقة حيث يكون الإدخال 

42
00:03:57,529 --> 00:04:03,254
سريعا. علينا ببساطة إضافتها إلى نهاية
المصفوفة. وقد نضطر إلى تغيير الحجم

43
00:04:03,254 --> 00:04:08,371
لجعل المصفوفة تكبر. لكن هذا لن يكون
 مناسبا لأن التعامل مع عدد كبير من

44
00:04:08,371 --> 00:04:13,899
المفاتيح بهدف عدّ المفاتيح التي تقع
ضمن مدى محدد، عليك المرور

45
00:04:13,899 --> 00:04:19,711
بجميع المفاتيح لتفحص ما إذا كانت
ضمن هذ المدى أم لا ومن ثم إعادتها

46
00:04:19,711 --> 00:04:26,043
بنفس الطريقة. بالتالي فهي تأخذ وقتا خطيا
لعدد كبير من المفاتيح. إذا قمت بالاحتفاظ

47
00:04:26,267 --> 00:04:32,638
بالأشياء مرتبة كما في حالة البحث 
الثنائي ومن ثم الإدخال من أجل الحفاظ

48
00:04:32,638 --> 00:04:38,591
على الترتيب في داخل المصفوفة، قد تحتاج
لنقل القيم الأكبر بموقع واحد

49
00:04:38,596 --> 00:04:44,209
وهكذا، أو التطبيق الأولي للبحث
الثنائي والذي قمنا بعمله حين

50
00:04:44,406 --> 00:04:49,662
نفذنا جداول الرموز. لذا فإن الإدخال قد يكون
خطيا، لكن يمكنك بعد ذلك استخدام البحث

51
00:04:49,662 --> 00:04:55,329
الثنائي من أجل البحث عن نقطتين حدوديتين،
وهذا سيأخذ فقط وقتا

52
00:04:55,329 --> 00:05:00,631
نسبيا مع اللوغاريتم. بعد ذلك يمكنك
منه معرفة عدد المفاتيح 

53
00:05:00,631 --> 00:05:06,243
الموجودة بين مؤشر أقل
قيمة في المجال ومؤشر

54
00:05:06,243 --> 00:05:12,027
أكبر قيمة في المجال. لذا فإن هذه 
التطبيقات الأولية ليست

55
00:05:12,027 --> 00:05:18,179
مقبولة لعدد كبير من المفاتيح كونها
ذات وقت خطي. لذا

56
00:05:18,179 --> 00:05:24,035
فإن ما نريده منها فعليا هو أن تكون ذات
وقت نسبي للوغاريتم. وذلك لكل من الإضافة

57
00:05:24,035 --> 00:05:29,186
والعد. في البحث المجالي بطبيعة 
الحال سنحتاج لأن نحتك بكل مفتاح

58
00:05:29,186 --> 00:05:35,413
سنقوم بإرجاعه. لذا فإن وقت 
التشغيل سيكون متناسبا مع عدد

59
00:05:35,413 --> 00:05:43,042
المفاتيح التي تحقق الشرط. لكن، وعلى أي 
حال هذه أهداف معقولة. وهي سهلة

60
00:05:43,042 --> 00:05:51,545
المنال. لذا [كحّة] لذا وعلى سبيل المثال ماذا
عن العدّ المجالي في بعد واحد؟

61
00:05:51,545 --> 00:05:58,014
حسنا، ما سنقوم بفعله فقط هو حفظ
المفاتيح في شجرة بحث ثنائي و قد

62
00:05:58,014 --> 00:06:03,484
نظرنا إلى تطبيق وظيفة "الرّتبة" 
في أشجار البحث الثنائية حيث لكل

63
00:06:03,484 --> 00:06:09,342
مفتاح يمكننا حساب عدد المفاتيح
الأقل منه قيمة.

64
00:06:09,342 --> 00:06:15,508
وفي هذه الحالة، فإن رتبة e هي 2 
ورتبة h هي 3 وهلم جرا. وفي

65
00:06:15,508 --> 00:06:21,413
شجرة البحث الثنائي، ستكون أرقام هذه 
الرتبة مرتبة تصاعديا كما نفعل في

66
00:06:21,413 --> 00:06:27,662
الاجتياز المرتب وهو سهل الحساب.
عليك أن تحفظ شجرة الرتب

67
00:06:27,662 --> 00:06:33,813
على شكل حقل، أو الاحتفاظ بحقل له
نفس حجم الشجرة ويكون من السهل

68
00:06:33,813 --> 00:06:40,760
إكمال الرتبة منها. إذن، كم عدد المفاتيح
الموجودة لنقل مثلا بين e و s؟ واحد، إثنان

69
00:06:40,760 --> 00:06:51,297
ثلاثة، أربعة، خمسة. وفي الحقيقة ما هي
إلا الفرق بين الرتبتين زائد واحد إذا كان المدخل

70
00:06:51,623 --> 00:07:00,361
الأعلى [كحّة] داخلا في مجال الاستعلام
موجودا في الجدول، وبدون +واحد ما عدا ذلك.

71
00:07:00,361 --> 00:07:08,274
هناك نفس العدد من المفاتيح بين e 
و s كما هناك بين e و t وهو خمسة.

72
00:07:08,274 --> 00:07:15,192
أما بين f و t فهناك أربعة فقط. لذا 
فإن العدّ المجالي أحادي البعد هو

73
00:07:15,192 --> 00:07:22,412
حساب سهل جدا تنفيذه في وقت
 لوغارتمي مع شجرة البحث الثنائي

74
00:07:22,412 --> 00:07:28,297
[كحّة] عدد العقد التي يتم فحصها عندما نقوم
بعمل بحث هو نفس طول مسار البحث

75
00:07:28,297 --> 00:07:33,789
إلى الأدنى مضافا إليه طول مسار البحث
إلى الأعلى من أجل [كحّة] إيجاد رتبها

76
00:07:33,976 --> 00:07:39,595
وهذا سيكون نسبيا مع وقت لوغارتمي.
[كحّة]. وهذا أيضا للبحث المجالي.

77
00:07:39,595 --> 00:07:46,018
حسنا، ما علينا سوى القيام ببحث ذو استدعاء ذاتي
وإيجاد كافّة المفاتيح الواقعة بين القيمة الدنيا والعليا

78
00:07:46,214 --> 00:07:51,472
فتنظر إلى الشجرة الفرعية اليسرى لترى إن كان 
أي منها يقع ضمن المدى. وتنظر إلى العقدة

79
00:07:51,472 --> 00:07:57,106
الحالية وتنظر إلى الشجرة الفرعية 
اليمنى، لترى إن كان أي منها يقع في

80
00:07:57,106 --> 00:08:02,555
المجال. ومن السهل تحديد إن كان أي
منها يقع في المجال بمجرد

81
00:08:02,555 --> 00:08:08,476
فحص كون مجالها يتداخل مع
الجذر أم لا. بالتالي إن كنا نبحث

82
00:08:08,476 --> 00:08:14,469
عن جميع المفاتيح بين f و t فعلينا أن
ننظر إلى كلتا الشجرتين الفرعيتين 

83
00:08:14,469 --> 00:08:19,643
للجذر s. ولكننا لن ننظر إلى الشجرة الفرعية
اليسرى لـ e لأن هذه جميعها أقل من e

84
00:08:19,643 --> 00:08:26,018
وبالتالي أقل من f. لذا لا نحتاج 
لإلقاء نظرة هناك. لكن

85
00:08:26,018 --> 00:08:31,419
ما عدا ذلك، فهو تعديل بسط على البحث 
الشجري ذو الاستدعاء التلقائي لإيجاد كل المفاتيح

86
00:08:31,635 --> 00:08:37,702
ومن السهل أيضا أن نرى وقت التشغيل
والذي سيكون نسبيا إلى

87
00:08:37,702 --> 00:08:47,518
عدد المفاتيح المُرجعة بالإضافة إلى اللوغاريتم. إذن،
هذا هو البحث المجالي ذو البعد الواحد باستخدام

88
00:08:47,518 --> 00:08:51,040
أشجار البحث الثنائية.