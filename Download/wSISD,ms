1
00:00:03,054 --> 00:00:09,019
Selamat datang. Hari ini, kita akan 
melihat berberapa 

2
00:00:09,019 --> 00:00:15,011
penggunaan jadual simbol dan 
struktur pokok carian binari untuk

3
00:00:15,011 --> 00:00:21,413
mengatasi masalah dalam pemprosesan data geometri. 
Jom kita lihat. Idea

4
00:00:21,413 --> 00:00:27,378
kita akan membincang tentang 
objek geometri, bukan kunci mudah seperti

5
00:00:27,378 --> 00:00:33,338
rentetan dan nombor. Sebagai contoh,
katakan objek geometri anda adalah titik

6
00:00:33,338 --> 00:00:38,346
dalam satah dan anda tetapkan satu persegi panjang
yang berorientasi dengan

7
00:00:38,346 --> 00:00:43,404
sumbu horizontal/vertikal. Anda mungkin
ingin bertanya, titik manakah terletak di dalam

8
00:00:43,404 --> 00:00:48,200
persegi panjang atau ada berapa titik terletak di dalam
persegi panjang itu. Ataupun mungkin anda

9
00:00:48,200 --> 00:00:54,011
memproses persegi panjang. Anda ada satu koleksi 
persegi panjang dan kita ingin tahu mana satu

10
00:00:54,011 --> 00:01:00,291
antara persegi panjang ini berpotong? Ataupun ada berapa banyak 
titik potongan antara persegi panjang? Ini

11
00:01:00,291 --> 00:01:05,837
adalah masalah menarik yang mempunyai banyak 
aplikasi, dari

12
00:01:05,837 --> 00:01:11,806
reka bentuk berbantukan komputer, ke permainan dan wayang 
dan juga abstraksi seperti pengkalan data

13
00:01:11,806 --> 00:01:17,849
dan juga situasi lain di mana anda mungkin 
ada berberapa kunci atau dimensi.

14
00:01:18,065 --> 00:01:24,856
Ia adalah tambahan yang 
menarik kepada idea yang kita telah lihat untuk

15
00:01:24,856 --> 00:01:30,175
jadual simbol bagi banyak aplikasi. 
Dan memeranjatkan,

16
00:01:30,175 --> 00:01:34,300
pokok carian binari dan 
algoritma yang kita lihat tadi akan

17
00:01:34,300 --> 00:01:39,774
memberikan penyelesaian kepada 
berberapa masalah dalam bidang ini.

18
00:01:39,774 --> 00:01:45,943
Dan membolehkan perkembangan 
dan teknologi baru dalam semua bidang

19
00:01:45,943 --> 00:01:51,135
aplikasi. Sebagai permulaan, kita 
akan melihat contoh masalah yang dipanggil

20
00:01:51,135 --> 00:01:56,761
carian selang satu dimensi. Dan ia 
membentuk dasar untuk apa yang kita

21
00:01:56,761 --> 00:02:02,146
akan lakukan. Ia adalah 
tambahan kecil kepada API jadual simbol berturut

22
00:02:02,146 --> 00:02:07,837
yang kita beri sebelum ini dan kita akan
melakukan operasi carian selang dan

23
00:02:07,837 --> 00:02:12,797
hitungan selang. Oleh itu, satu dimensi bermaksud kita hanya ada satu kunci, 
oleh itu kita akan memasukkan satu

24
00:02:12,797 --> 00:02:19,116
pasangan nilai utama sebelum ini dan apa yang kita ingin 
buat adalah untuk memcari satu kunci dan

25
00:02:19,116 --> 00:02:24,770
satu nilai yang dikaitkan dengannya, yang 
boleh dipadamkan. Akan tetapi, kita mahu

26
00:02:24,770 --> 00:02:30,703
operasi carian selang dan carian nombor ini. 
Jadi, cari semua kunci-kunci di antara dua

27
00:02:30,703 --> 00:02:36,083
kunci yang diberi, atau beri berapa banyak kunci 
terletak di antara dua kunci yang telah ditetapkan. Sebagai

28
00:02:36,083 --> 00:02:42,251
contoh, di sebelah kana kita memasukkan satu nombor 
kunci dan kita akan menunjukkan mereka

29
00:02:42,251 --> 00:02:47,992
dalam turutan. Tetapi, anda mungkin cakap, ada berapa kunci

30
00:02:47,992 --> 00:02:53,780
di antara g dan k. Dalam kes ini, ada 
hanya dua. Dan klien mungkin cakap,

31
00:02:53,780 --> 00:02:59,598
apakah kunci-kunci tersebut dan anda ingin 
mengembalikan mereka seperti asal. Ini adalah

32
00:02:59,598 --> 00:03:06,010
operasi biasa, contohnya, dalam pengkalan data. Anda
ingin mengembalikan gaji pembayar cukai

33
00:03:06,010 --> 00:03:11,335
di antara satu juta dan sepuluh 
juta dan kemudian mana satu ialah mereka dan

34
00:03:11,335 --> 00:03:17,431
sebagainya. Jadi, carian selang adalah satu operasi yang 
amat penting. Sekarang, dalam

35
00:03:17,431 --> 00:03:23,459
penterjermahan geometri, kita hanya membayangkan 
kunci sebagai titik atas garis. Oleh itu,

36
00:03:23,459 --> 00:03:29,627
nilai utama juga ditetapkan sebagai 
titik atas garis. Kita mungkin akan mengubah

37
00:03:29,627 --> 00:03:34,856
adjad ke nombor, ataupun kunci 
ke nombor. Selepas itu, apa yang kita

38
00:03:34,856 --> 00:03:41,119
cari atau hitung adalah titik 
yang terletak pada satu selang dalam satu dimensi. Jadi

39
00:03:41,575 --> 00:03:47,272
bagaimana kita akan melaksanakan ini? 
Ini adalah masalah ringkas yang sangat

40
00:03:47,272 --> 00:03:52,356
mirip kepada masalah jadual simbol. Kita 
mungkin akan menimbangkan untuk membiarkan barang ini

41
00:03:52,356 --> 00:03:57,529
dalam keadaan urutan tidak tersusun. Biarkan mereka dalam satu 
urutan dan kemudian untuk memasukkannya adalah

42
00:03:57,529 --> 00:04:03,254
mudah. Kita hanya perlu menambahnya ke hujung 
turutan ini. Kita mungkin perlu menukarkan saiz

43
00:04:03,254 --> 00:04:08,371
untuk membolehkan turutan ini membesar. Walaubagaimanapun, ini 
tidak bagus untuk sebilangan besar

44
00:04:08,371 --> 00:04:13,899
kunci, demi menghitung kunci yang jatuh 
dalam satu selang nombor yang ditetapkan, anda perlu

45
00:04:13,899 --> 00:04:19,711
melalui semua kunci dan ujian sama ada 
mereka berada di dalam selang atau tidak dan kembalikan 

46
00:04:19,711 --> 00:04:26,043
ke asal. Jadi, ambil masa linear untuk 
jumlah kunci besar. Kalau anda biarkan

47
00:04:26,267 --> 00:04:32,638
barang dalam satu turutan seperti dalam situasi carian binari 
dan kemudian masukkan dalam satu turutan supaya 

48
00:04:32,638 --> 00:04:38,591
ia dalam keadaan yang teratur di dalam satu turutan, anda mungkin perlu 
memindah yang lebih besar ke posisi lain

49
00:04:38,596 --> 00:04:44,209
atau implementasi mudah 
carian binari bila kita bina jadual simbol. 

50
00:04:44,406 --> 00:04:49,662
Jadi, masa untuk masuk mungkin 
linear tetapi anda perlu mengguna 

51
00:04:49,662 --> 00:04:55,329
carian binari untuk memcari dua titik hujung, 
ini akan memakan masa yang

52
00:04:55,329 --> 00:05:00,631
selaras untuk log kembali. Dari itu, 
anda boleh mengira berapa banyak kunci

53
00:05:00,631 --> 00:05:06,243
yang ada atau kembalikan mereka di antara 
index itu, yang paling kecil dan paling besar di dalam selang, 

54
00:05:06,243 --> 00:05:12,027
Oleh itu, implementasi mudah tidak

55
00:05:12,027 --> 00:05:18,179
diterima untuk jumlah kunci yang besar kerana
mereka mempunyai masa operasi yang linear. Jadi,

56
00:05:18,179 --> 00:05:24,035
apa yang kita ingin adalah untuk mempunyai masa yang selaras dengan log masuk. Bagi kemasukkan dan

57
00:05:24,035 --> 00:05:29,186
penghitungan. Bagi carian selang, tentu 
saja, kita perlu menyentuh setiap kunci

58
00:05:29,186 --> 00:05:35,413
yang kita kembalikan, jadi masa yang berjalan 
akan selaras dengan bilangan

59
00:05:35,413 --> 00:05:43,042
kunci yang sepadan. Walaubagaimanapun, itu hanyalah 
tujuan yang munasabah. Mereka senang

60
00:05:43,042 --> 00:05:51,545
untuk dicapai. Oleh itu [batuk], sebagai contoh, bagaimana 
pula dengan hitungan selang satu dimensi?

61
00:05:51,545 --> 00:05:58,014
Apa kita akan buat adalah membiarkan saja 
kunci dalam pokok carian binari dan kita

62
00:05:58,014 --> 00:06:03,484
lihat implementasi fungsi pangkat 
untuk pokok carian binari di mana untuk

63
00:06:03,484 --> 00:06:09,342
setiap kunci, kita bolah mengira berapa banyak kunci 
yang ada kurang daripada

64
00:06:09,342 --> 00:06:15,508
kunci tersebut. Dalam kes ini, pangkat e adalah dua 
dan h adalah tiga dan sebagainya. Jadi, dalam

65
00:06:15,508 --> 00:06:21,413
pokok carian binari, pangkat nombor adalah 
dalam turutan meningkat seperti 

66
00:06:21,413 --> 00:06:27,662
turutan traversal dan ia amat mudah untuk 
dihitung. Anda perlu memastikan pangkat pokok

67
00:06:27,662 --> 00:06:33,813
sebagai ruang kosong, atau sediakan ruang kosong 
bersaiz pokok itu dan pangkat akan mudah diisi

68
00:06:33,813 --> 00:06:40,760
dari itu. Berapa banyak kunci 
terletak di antara, contohnya e dah s? Satu, dua

69
00:06:40,760 --> 00:06:51,297
tiga, empat, lima. Ia sebenarnya hanya 
perbezaan di antara pangkat dan tambah satu jikalau

70
00:06:51,623 --> 00:07:00,361
nombor besar [batuk] dalam selang pertanyaan adalah dalam jadual dan tidak lebih satu.

71
00:07:00,361 --> 00:07:08,274
Terdapat sebilangan kunci yang sama di antara e 
dan s seperti di antara e dan t lima.

72
00:07:08,274 --> 00:07:15,192
Di antara f dan t, hanya terdapat empat. 
Itu adalah a, a sebenarnya 1d hitungan selang 

73
00:07:15,192 --> 00:07:22,412
it amat mudah untuk dihitung 
dalam log masa dengan pokok carian binari. 

74
00:07:22,412 --> 00:07:28,297
[batuk] nombor dalam nodul yang diteliti bila kita 
mencari jarak

75
00:07:28,297 --> 00:07:33,789
jalan ke bawah dan tambah lagi carian 
jarak jalan ke atas untuk [batuk] mencari pangkat mereka

76
00:07:33,976 --> 00:07:39,595
dan masanya akan selaras 
kepada log N. [batuk]. dan satu carian selang,

77
00:07:39,595 --> 00:07:46,018
Kita perlu melakukan carian rekursif dan 
cari semua kunci yang terletak di antara yang rendah dan tinggi yang anda

78
00:07:46,214 --> 00:07:51,472
nampak di pokok kecil di antara mereka 
boleh jatuh dalam selang ini. Lihat pada

79
00:07:51,472 --> 00:07:57,106
nodul terbaru dan lihat pada sebelah kanan 
pokok kecil, kalau ada di antara mereka boleh jatuh di dalam

80
00:07:57,106 --> 00:08:02,555
selang. Dan ia amat mudah untuk memastikan 
satu yang boleh jatuh di dalam selang

81
00:08:02,555 --> 00:08:08,476
dengan memeriksa sama ada selangan itu bertindih 
dengan akar atau tidak. Kalau kita mencari

82
00:08:08,476 --> 00:08:14,469
semua kunci di antara f dan t kemudian kita perlu 
melihat pada pokok kecil akar

83
00:08:14,469 --> 00:08:19,643
s. Tetapi kita tidak melihat sebelah kiri
 pokok kecil e kerana ia lebih rendah

84
00:08:19,643 --> 00:08:26,018
daripada e dan oleh itu, adalah lebih rendah dari f. 
Kita tidak perlu mencari sana tapi

85
00:08:26,018 --> 00:08:31,419
kalau tidak, it hanyalah modifikasi mudah pokok carian rekursif 
untuk mencari semua kunci

86
00:08:31,635 --> 00:08:37,702
dan ia amat mudah untuk melihat masa berjalan 
yang akan selaras dengan

87
00:08:37,702 --> 00:08:47,518
sebilangan besar kunci yang mengembalikan plus log N. Jadi, 
inilah carian selang satu dimensi menggunakan

88
00:08:47,518 --> 00:08:51,040
pokok carian binari.