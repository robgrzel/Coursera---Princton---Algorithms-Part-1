1
00:00:01,013 --> 00:00:06,020
Velkommen. Jeg er Bob Sedgewick, professor i
datalogi på Princeton. Dette er vores

2
00:00:06,020 --> 00:00:11,014
online kursus Algoritmer udviklet af
mig selv og Kevin Wayne her på Princeton.

3
00:00:11,014 --> 00:00:16,002
Vi vil starte med en overordnet
diskussion af hvorfor det er smart at studere

4
00:00:16,002 --> 00:00:21,005
algoritmer og en lille smule
om de ressourcer du får brug når du tager

5
00:00:21,005 --> 00:00:26,543
dette kursus. Så, hvad er dette kursus? Det
er et kursus på mellemniveau om

6
00:00:26,543 --> 00:00:31,062
algoritmer. Vi vil koncentrere os om
programmering og problemløsning i

7
00:00:31,062 --> 00:00:35,870
forbindelse med rigtige applikationer, og vores
fokus vil være på disse to ting,

8
00:00:35,870 --> 00:00:41,756
Algoritmer som metoder til at løse
problemer og datastrukturer, der gemmer

9
00:00:41,756 --> 00:00:46,651
den information der er associeret
med et problem, og som går hånd i hånd med

10
00:00:46,651 --> 00:00:51,600
algoritmerne. Dette er de basis emner
som vi vil dække i del et og del 2

11
00:00:51,600 --> 00:00:56,559
i kurset. Den første del er sortering
i data typer og søgning. We vil studere et

12
00:00:56,559 --> 00:01:00,810
antal datastrukturer og algoritmer,
som danner basis for alle de metoder we

13
00:01:00,810 --> 00:01:05,811
overvejer inklusiv stakke, køer, tasker
og priotitetskøer. Derefter vil vi kigge på

14
00:01:05,811 --> 00:01:09,852
klassiske algoritmer til sortering, altså
putte ting i orden. Det er quicksort,

15
00:01:09,852 --> 00:01:15,130
mergesort, heapsort og radix sort. Og
vi vil kigge på klassiske metoder til

16
00:01:15,130 --> 00:01:19,932
søgning inklusiv binære søgetræer,
rød-sorte binære søgetræer og hashtabeller.

17
00:01:19,932 --> 00:01:25,166
Anden halvdel af kurset drejer sig om
mere avancerede algoritmer inklusiv

18
00:01:25,166 --> 00:01:30,425
grafalgoritmer, klassiske grafsøge-
algoritmer, mindst udspændende træer og

19
00:01:30,425 --> 00:01:35,417
korteste-vej algoritmer, algoritmer til
at processere strenge inklusiv regulære

20
00:01:35,417 --> 00:01:41,178
udtryk og data compression. Og derudover
nogle avancerede algoritmer der bruger

21
00:01:41,178 --> 00:01:46,890
de basis algoritmer, som vi udviklede
tidligere i kurset. Nå, hvorfor skulle man

22
00:01:46,890 --> 00:01:52,075
studere algoritmer? Ja, deres 
indflydelse er meget bred og vidtrækkende.

23
00:01:52,075 --> 00:01:57,185
Fra internettet til biologi til
kommerciel programmering, computergrafik,

24
00:01:57,185 --> 00:02:02,512
sikkerhed, multimedie, sociale netværk og
videnskabelige applikationer. Algoritmer er

25
00:02:02,512 --> 00:02:07,805
alle steder. De bliver brugt til film og
computerspil, til simuleringer af

26
00:02:07,805 --> 00:02:12,910
partikelkollisioner. De bliver brug til at studere
gener, og alle mulige andre

27
00:02:12,910 --> 00:02:18,319
applikationer. Så det er en vigtig
grund til at studere algoritmer - deres indflydelse

28
00:02:18,319 --> 00:02:23,329
er bred og vidtrækkende. Algoritmer er
også interessante at studere, fordi de

29
00:02:23,329 --> 00:02:28,064
har gamle rødder. De første
algoritmer vi studerer kan føres tilbage til 300

30
00:02:28,064 --> 00:02:32,588
før Kristi, så langt tilbage som til Euclid. 
Konceptet om en algoritme blev formaliseret

31
00:02:32,588 --> 00:02:37,651
her på Princeton, af Church og
Turing i 30'erne. De fleste af de algoritmer

32
00:02:37,651 --> 00:02:41,806
som vi vil kigge på blev dog fundet indenfor
de sidste årtier. Nogen blev ovenikøbet

33
00:02:41,806 --> 00:02:46,452
opdaget af studerende på et kursus
som dette. Og der er masser af

34
00:02:46,452 --> 00:02:51,595
andre algoritmer, der venter på at blive opdaget
af studerende som dig. Hovedårsagen til

35
00:02:51,595 --> 00:02:57,239
at folk studerer algoritmer, er for at kunne
løse problemer, som ellers kunne 

36
00:02:57,239 --> 00:03:02,498
blive undersøgt. F.eks. i den første
forelæsning, skal vi snakke om

37
00:03:02,498 --> 00:03:07,234
netværksforbindelsesproblemet. Problemet
erom det givet et stort sæt ting

38
00:03:07,234 --> 00:03:12,135
der er forbundet med hinanden parvis, er
muligt at komme fra den ene til den anden

39
00:03:12,135 --> 00:03:17,134
via en vej gennem forbindelserne. Som
du kan se fra dette eksempel, er det ikke

40
00:03:17,134 --> 00:03:22,282
klart om der eksisterer sådan en vej. 
Vi har brugt for et computerprogram til at løse det,

41
00:03:22,282 --> 00:03:28,793
eller i virkeligheden en effektiv algoritme.
I dette tilfælde er svaret er der

42
00:03:28,793 --> 00:03:34,241
sådan en vej. Endnu en grund til at studere
algoritmer er for intellektuel

43
00:03:34,241 --> 00:03:39,795
stimulering. Algoritmer er meget
interessante objekter at studere. Don Knuth

44
00:03:39,795 --> 00:03:45,275
der skrev flere bøger om algoritmer
og var en pioner indenfor feltet sagde:

45
00:03:45,275 --> 00:03:50,553
"En algoritme skal ses for at kunne blive
forstået". Du kan ikke bare forestille dig en

46
00:03:50,553 --> 00:03:55,998
algoritme, det er nødvendigt at du arbejder med den.
Et andet citat fra Francis Sullivan siger:

47
00:03:55,998 --> 00:04:01,412
"De store algoritmer er beregningers
poesi". Ligesom digte, kan de være

48
00:04:01,412 --> 00:04:05,905
kortfattede, undvigende, tunge, ja selv
mystiske. Men når de først er forstået, kaster de

49
00:04:05,905 --> 00:04:11,473
et klart nyt lys over nogle aspekter af
programmering. Algoritmer er interessante for

50
00:04:11,473 --> 00:04:17,057
intellektuel stimulering. En anden grund til
at mange mennesker studerer algoritmer og jeg tror

51
00:04:17,057 --> 00:04:21,565
netop mange af jer, er at det er nødvendigt at
forstå gode algoritmer, effektive

52
00:04:21,565 --> 00:04:26,760
algoritmer, gode datastrukturer for
at blive en kyndig programmør. Linus

53
00:04:26,760 --> 00:04:31,358
Torvalds, der lavede Linux, siger
at forskellen mellem en dårlig

54
00:04:31,358 --> 00:04:36,708
programmør og en god programmør er om han
tænker på sin kode eller sine datastrukturer

55
00:04:36,708 --> 00:04:41,739
som det vigtigste. Dårlige programmører bekymrer
sig om kode, gode programmører bekymrer

56
00:04:41,739 --> 00:04:45,943
sig om datastrukturer, og deres
forhold. Og, kan jeg tilføje, om

57
00:04:45,943 --> 00:04:50,048
de algoritmer der bruger dem. Niklaus
Wirth, endnu en pioner indenfor datalogien

58
00:04:50,048 --> 00:04:55,438
skrev en berømt bog kaldet
Algorithms + Data Structures = Programs 
(Algoritmer + Datastrukturer = Programmer).

59
00:04:55,438 --> 00:05:02,079
[host]. Endnu en grund nutildags til at studere
algoritmer er at de er blevet et

60
00:05:02,079 --> 00:05:08,420
almindeligt sprog til at forstå naturen.
Algoritmer er computermodeller, og

61
00:05:08,420 --> 00:05:14,892
algoritmemodeller erstatter 
matematiske modeller i videnskabelige undersøgelser.

62
00:05:14,892 --> 00:05:20,287
I det tyvende århundredes matematik udviklede 
videnskabsmænd matematiske modeller for at forsøge at

63
00:05:20,287 --> 00:05:25,251
forstå naturlige fænomener. Det blev hurtigt
klart at disse matematiske

64
00:05:25,251 --> 00:05:30,561
modeller var svære at løse. Det var
svært at finde løsninger, og at 

65
00:05:30,561 --> 00:05:36,011
teste hypoteser mod naturlige
fænomener. Så mere og mere og mere

66
00:05:36,011 --> 00:05:41,189
i dag udvikler folk computermodeller
hvor de forsøger at simulere

67
00:05:41,189 --> 00:05:46,568
hvad der måske sker i naturen for
bedre at kunne forsøge at forstå. Algoritmer

68
00:05:46,568 --> 00:05:52,069
spiller en meget vigtig del i denne
proces. Og vi vil se nogle eksempler på

69
00:05:52,069 --> 00:05:58,009
det i dette kursus. En anden vigtig
grund er at hvis du kender effekten, hvordan

70
00:05:58,009 --> 00:06:03,067
du effektivt bruger algoritmer og data-
strukturer, har du en meget

71
00:06:03,067 --> 00:06:09,851
større chance for at skaffe dig et job i
teknologyindustrien end hvis du ikke gør.

72
00:06:09,851 --> 00:06:15,953
Så der er mange grunde, som jeg lige
gennemgik, for at studere algoritmer.

73
00:06:15,953 --> 00:06:21,761
Deres indflydelse er bred og vidtrækkende,
de har gamle rødder og præsenterer nye

74
00:06:21,761 --> 00:06:26,175
muligheder, de tillader os at løse
problemer, som ikke ellers kunne

75
00:06:26,175 --> 00:06:30,003
løses, du kan bruge dem til at 
stimulere dig selv intellektuelt til at

76
00:06:30,003 --> 00:06:34,049
blive en kyndig programmør. Det kan være
de kan åbne hemmeligheden om livet i universet, og

77
00:06:34,049 --> 00:06:38,461
de er gode til sjov og profit. Faktisk 
kan en programmør spørge, hvorfor studere

78
00:06:38,461 --> 00:06:42,433
noget som helst andet? Ja, der er masser af
gode grunde til at studere andre ting, men

79
00:06:42,433 --> 00:06:47,557
jeg vil mene at der ikke er nogen grund til ikke
at studere algoritmer. [host] Så i dette

80
00:06:47,557 --> 00:06:53,714
kursus bruger vi to ressourcer, som jeg gerne
vil snakke om og sikre mig at folk

81
00:06:53,714 --> 00:06:59,374
er bekendte med inden vi starter på selve
indholdet. Dette er en model, som

82
00:06:59,374 --> 00:07:04,472
Kevin Wayne og jeg udviklede og har
brugt i mange år, og vi synes at det er

83
00:07:04,472 --> 00:07:09,507
en meget effektiv måde at understøtte den slags
forelæsninger, som vi vil holde

84
00:07:09,507 --> 00:07:14,659
i dette kursus. For neden, og
det er frivilligt i dette kursus, har vi 

85
00:07:14,659 --> 00:07:19,887
en lærebog. Det er en traditionel lærebog
der grundigt dækker emnerne i

86
00:07:19,887 --> 00:07:24,285
kurset, ja, faktisk mange flere emner end vi
kan vise i forelæsningerne. Ved siden af

87
00:07:24,285 --> 00:07:28,668
lærebogen er frit tilgængeligt
materiale, som vi kalder bogsiden. Du

88
00:07:28,668 --> 00:07:33,839
kan gå til bogsiden for at se
slid'sne for forelæsningerne. Endnu vigtigere dog

89
00:07:33,839 --> 00:07:39,967
er der kode, opgaver og en 
stor mængde information gemt der. Der er faktisk

90
00:07:39,967 --> 00:07:45,329
måske 10 gange så meget som i bogen,
inklusiv et sammendrag af indholdet. Derfor

91
00:07:45,329 --> 00:07:51,211
vil du i løbet af dette kursus referrere til
bogsiden ofte mens du arbejder

92
00:07:51,211 --> 00:07:57,075
online. Folk spørger ofte omkring 
forudsætninger. Vi antager at folk

93
00:07:57,075 --> 00:08:02,820
der tager dette kursus, kan programmere,
og kender basis ting, som løkker, tabeller,

94
00:08:02,820 --> 00:08:09,307
funktioner. De har noget erfaring med
objektorienteret programmering og rekursion.

95
00:08:09,307 --> 00:08:15,713
Vi bruger sproget Java, men vi dvæler
ikke ved detaljerne omkring Java, vi bruger det mest

96
00:08:15,713 --> 00:08:21,546
som et eksempelsprog. Vi bruger noget
matematik, men ikke avanceret matematik. Hvis du vil

97
00:08:21,546 --> 00:08:27,875
gennemse the materiale, som vi mener er en
forudsætning for materialet i dette

98
00:08:27,875 --> 00:08:33,399
kursus, kan du tage en hurtig gennemgang ved
at kigge på sektionerne 1.1 og 1.2 i

99
00:08:33,399 --> 00:08:39,110
bogen. Enten på bogsiden eller i 
lærebogen. Hvis du vil have en dybdegående gennemgang

100
00:08:39,110 --> 00:08:43,722
har vi en hel læsebog kaldet: An
Introduction to Programming in Java: An

101
00:08:43,722 --> 00:08:49,338
Inerdisciplinary Approach. Der er også en
bogside og en lærebog. Men

102
00:08:49,338 --> 00:08:53,968
når alt kommer til skal du kunne
programmere, og den hurtige måde at

103
00:08:53,968 --> 00:08:58,688
blive klar på, er at skrive et Java-program på din egen
computer, måske ved at bruge en programmerings-

104
00:08:58,688 --> 00:09:03,287
model, som beskrevet på bogsiden. Vi
vil give dig meget mere detaljeret information

105
00:09:03,287 --> 00:09:07,847
omkring det, som vi nærmer osopgaverne.
Du kan bruge dit eget programmerings-

106
00:09:07,847 --> 00:09:13,294
system, hvis du allerede er fortrolig med et
eller du kan downloade vores. Vi har instruktioner

107
00:09:13,294 --> 00:09:15,039
på internettet omkring hvordan man gør det.