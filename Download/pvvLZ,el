1
00:00:01,065 --> 00:00:07,024
Τελικά, μιλάμε για σταθερότητα. Αυτός είναι
πραγματικά ένας από τους κανόνες του παιχνιδιού αλλά

2
00:00:07,024 --> 00:00:11,029
είναι πολύ πιο εύκολο να μιλήσουμε σχετικά μέσα
στο πλαίσιο των πραγματικών αλγορίθμων τους οποίους έχουμε

3
00:00:11,029 --> 00:00:15,068
δει έως τώρα. Και πραγματικά
δεν έχει νόημα αν δε γνωρίζετε σχετικά με τους συγκριτές

4
00:00:15,068 --> 00:00:21,022
τους οποίους μόλις παρουσιάσαμε. Έτσι, η τυπική
 εφαρμογή που μόλις χρησιμοποίησα έως παράδειγμα

5
00:00:21,022 --> 00:00:26,098
δείχνει το σύνολο των εγγραφών των φοιτητών. Έτσι
τους έχουμε ταξινομημένους κατά όνομα και αυτό δείχνει,

6
00:00:26,098 --> 00:00:31,884
κάτι που κάνουμε λίγο πριν από την καταχώρηση
των τελικών βαθμολογιών. Ίσως η τρίτη γραμμή εδώ

7
00:00:31,884 --> 00:00:38,026
 να είναι η τελική βαθμολογία. Έτσι είναι όλα καλά
ταξινομημένα κατά όνομα και στη συνέχεια έτοιμα ώστε να

8
00:00:38,026 --> 00:00:44,009
τα διανείμει σε αυτούς που το οδηγούν
στα τμήματα, αυτό που θέλουμε να κάνουμε είναι

9
00:00:44,009 --> 00:00:50,625
να ταξινομήσουμε κατά τα δεύτερα πεδία, να ταξινομήσουμε κατά
τμήμα. Το πρόβλημα είναι ότι όταν το κάνουμε

10
00:00:50,625 --> 00:00:57,945
αυτό, χαλάει την ταξινόμηση κατά όνομα και
αυτό είναι ενοχλητικό. Μπορεί να υποθέσετε ότι

11
00:00:57,945 --> 00:01:04,329
εφόσον θα το έχετε ταξινομήσει κατά όνομα, όταν
θα το ταξινομήσετε κατά τα δεύτερο πεδίο τότε θα

12
00:01:04,329 --> 00:01:10,742
πρέπει να διατηρήσει την ταξινόμηση κατά όνομα για
όλα όσα έχουν ίσα κλειδιά στο δεύτερο

13
00:01:10,742 --> 00:01:17,191
 πεδίο. Στην πραγματικότητα όλες οι ταξινομήσεις δε διατηρούν
την ιδιότητα που ονομάζεται σταθερότητα.

14
00:01:17,191 --> 00:01:22,726
Και σαφώς, αξίζει τον κόπο να σκεφτείτε
για την εφαρμογή σας εάν

15
00:01:22,726 --> 00:01:28,039
θέλετε ή χρειάζεστε μία σταθερή ταξινόμηση. Και έτσι, είναι
μία ενοχλητική έκπληξη για πολλούς ανθρώπους και

16
00:01:28,039 --> 00:01:33,659
πολλές εφαρμογές. Έτσι μία σταθερή ταξινόμηση είναι μία
ταξινόμηση που διατηρεί την σχετική σειρά των

17
00:01:33,659 --> 00:01:38,956
στοιχείων με ίσα κλειδιά. Οποιαδήποτε ταξινόμηση είναι
σταθερή; Αυτή είναι μια ενδιαφέρουσα ερώτηση

18
00:01:38,956 --> 00:01:44,879
την οποία θα δούμε τώρα. Το γρήγορο
συμπέρασμα είναι ότι η ταξινόμηση εισαγωγής και

19
00:01:44,879 --> 00:01:52,238
η ταξινόμηση συγχώνευσης είναι σταθερές αλλά όχι η ταξινόμηση
επιλογής ή Shellsort. Και ακόμη και μέσα σε αυτό

20
00:01:52,238 --> 00:01:58,477
το συμπέρασμα, υπάρχουν εφαρμογές οι οποίες
ίσως δεν είναι σταθερές. Πρέπει να

21
00:01:58,477 --> 00:02:04,158
ελέγξετε προσεκτικά τον κώδικα για να είστε σίγουροι.
Πάντοτε, σε αυτό το μάθημα, έχουμε μία άσκηση

22
00:02:04,158 --> 00:02:10,834
ή ερώτηση εξετάσεων είναι αυτή η εκδοχή
ταξινόμησης σταθερή ή όχι; Κατά αυτόν τον τρόπο, οι μαθητές μαθαίνουν να

23
00:02:10,834 --> 00:02:16,709
αναγνωρίζουν αν ο κώδικας είναι σταθερός. Έτσι
αυτό είναι απλά ένα ακόμα χαρακτηριστικό παράδειγμα όπου

24
00:02:16,905 --> 00:02:21,879
έχουμε τα πράγματα ταξινομημένα κατά χρόνο, και στη συνέχεια
αυτό που θέλουμε να κάνουμε είναι ίσως αυτά

25
00:02:22,050 --> 00:02:27,435
σημαντικά γεγονότα. Άνθρωποι αγοράζουν εισιτήρια για
μια συναυλία ροκ και πρόκειται να τους ταξινομήσω κατά

26
00:02:27,435 --> 00:02:31,702
τοποθεσία αυτό που θα ελπίζαμε είναι ότι θα
διατηρήσει την ταξινόμηση κατά χρόνο αλλά αυτό είναι μία

27
00:02:31,702 --> 00:02:36,640
μη σταθερή ταξινόμηση που δεν ενοχλεί
έτσι, στη συνέχεια στην τοποθεσία θα πρέπει

28
00:02:36,640 --> 00:02:41,725
να το επαναταξινομήσουν αν χρησιμοποιούν ένα από
αυτά. Αλλά αν χρησιμοποιούν μία σταθερή ταξινόμηση, τότε

29
00:02:41,725 --> 00:02:47,692
παραμένει ταξινομημένο κατά χρόνο και πολλές
εφαρμογές θέλουν σταθερότητα. Καλώς,

30
00:02:47,692 --> 00:02:54,015
οπότε ας δούμε κάθε έναν από τους
αλγορίθμους που έχουμε εξετάσει μέχρι τώρα.

31
00:02:54,207 --> 00:02:59,097
Ταξινόμηση Εισαγωγής. Η Ταξινόμηση Εισαγωγής είναι σταθερή.
Γιατί είναι σταθερή; Λοιπόν, δεν μετακινήσαμε ποτέ

32
00:02:59,097 --> 00:03:05,633
ίσα στοιχεία το ένα πάνω από το άλλο. Σε αυτό
εδώ το παράδειγμα, όταν πάρουμε το Α1, λοιπόν έτσι

33
00:03:05,866 --> 00:03:12,141
είναι σε αυτή την περίπτωση, ο δείκτης είναι απλώς ένας
που εμφανίζεται στον πίνακα, είναι απλώς του Α

34
00:03:12,141 --> 00:03:18,763
και του Β. Όταν πάρουμε το δεύτερο μας Α, σταματάμε
την ταξινόμηση εφ 'όσον δεν είμαστε μικρότεροι. Είμαστε

35
00:03:18,763 --> 00:03:24,911
ίσοι, δεν είμαστε μικρότεροι, το σταματάμε έτσι ώστε
να μη μετακινήσουμε ποτέ ένα ίσο στοιχείο πάνω από κάποιο άλλο.

36
00:03:24,911 --> 00:03:30,488
Εάν ήταν μικρότερο ή μικρότερο ή ίσο, τότε
δεν θα μπορούσε να λειτουργήσει. Ή αν το κάναμε με άλλο

37
00:03:30,488 --> 00:03:35,818
τρόπο και προχωρούσαμε αναλόγως. Έτσι ώστε
ίσα στοιχεία να μη μετακινούντε ποτέ το ένα πάνω από το άλλο στον

38
00:03:35,818 --> 00:03:41,997
κώδικα έτσι επομένως η ταξινόμηση εισαγωγής είναι
σταθερή. Αλλά η ταξινόμηση επιλογής δεν είναι σταθερή.

39
00:03:42,298 --> 00:03:49,529
Συνήθης τρόπος, ο τρόπος για να δείξετε ότι μία ταξινόμηση
δεν είναι σταθερή είναι απλά να δείτε αν

40
00:03:49,529 --> 00:03:55,875
έχει μία μακράς απόστασης ανταλλαγή που θα μπορούσε
να μετακινήσει ένα στοιχείο πάνω από κάποιο άλλο ίσο στοιχείο. Έτσι,

41
00:03:56,163 --> 00:04:02,245
[βήχας] σε αυτήν την περίπτωση, για παράδειγμα, για
την ταξινόμηση επιλογής, όταν κάνουμε αυτή την πρώτη

42
00:04:02,245 --> 00:04:08,471
λάθος ανταλλαγή, [βήχας] όπου βρήκαμε το
ελάχιστο Α και το Β βρίσκεται στη θέση μηδέν.

43
00:04:08,471 --> 00:04:14,951
Κάναμε μία μακράς απόστασης ανταλλαγή και αυτό
εκτόξευσε το πρώτο στοιχείο πέρα από κάθε στοιχείο

44
00:04:14,951 --> 00:04:21,249
που θα μπορούσε να είναι ίσο βάζοντας τα εκτός
σειράς. Και αυτό μπορεί να μη διορθωθεί οπότε

45
00:04:21,249 --> 00:04:26,524
αυτή η ταξινόμηση δεν είναι σταθερή. Θα μπορούσε να μετακινήσει
στοιχεία πάνω από κάποιο ίσο στοιχείο και να αφήσει ένα

46
00:04:26,524 --> 00:04:32,601
αποτέλεσμα όπου στοιχεία που είναι ίσα ή σε
διαφορετική σειρά από ότι ήταν αρχικά

47
00:04:32,601 --> 00:04:39,016
στο αρχείο. Η Ταξινόμηση Επιλογής δεν είναι σταθερή
Το Shellsort επίσης έχει μία μακράς απόστασης ανταλλαγή

48
00:04:39,016 --> 00:04:45,479
και άρα δεν είναι σταθερό. Μετακινεί κλειδιά πάνω από
άλλα κλειδιά που θα μπορούσαν να είναι ίσα και έτσι είναι

49
00:04:45,479 --> 00:04:51,024
εύκολο να δημιουργηθούν παραδείγματα που να δείχνουν ότι η Ταξινόμηση Επιλογής δεν είναι σταθερή. Και τι

50
00:04:51,024 --> 00:04:57,527
 γίνεται με την Ταξινόμηση Συγχώνευσης; Η Ταξινόμηση Συγχώνευσης είναι σταθερή εντάξει,
είναι σταθερή όσο η διαδικασία συγχώνευσης

51
00:04:57,527 --> 00:05:02,923
είναι σταθερή και αυτή η διαδικασία θα
είναι σταθερή εξαρτώντας από το πώς κωδικοποιήσαμε.

52
00:05:03,118 --> 00:05:09,232
Και , και στον κώδικα μας, αν τα δύο κλειδιά είναι
ίσα, παίρνει από τον αριστερό υποπίνακα έτσι

53
00:05:09,232 --> 00:05:15,670
αυτό σημαίνει ότι, θα λαμβάνει πάντοτε,
αν υπάρχουν δύο σύνολα ίσων κλειδιών,

54
00:05:15,670 --> 00:05:21,112
θα διατηρήσει τη σχετική σειρά και
αυτό είναι αρκετό για να δείξει ότι η διαδικασία

55
00:05:21,112 --> 00:05:26,672
συγχώνευσης είναι σταθερή και ως εκ τούτου
η Ταξινόμηση Συγχώνευσης είναι σταθερή. Σταθερότητα είναι μία

56
00:05:26,672 --> 00:05:38,905
σημαντική ιδιότητα των αλγορίθμων ταξινόμησης.
Η Ταξινόμηση Συγχώνευσης δεν είναι μόνο αποτελεσματική, είναι επίσης