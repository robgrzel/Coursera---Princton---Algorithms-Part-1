1
00:00:01,013 --> 00:00:06,020
반갑습니다. 프린스턴 대학 컴퓨터과학과의
교수 Bob Sedgewick 입니다.

2
00:00:06,020 --> 00:00:11,014
이 강의는 프린스턴에서 저와 Kevin Wayne
이 함께 개발한 알고리즘 온라인 교육과정입니다.

3
00:00:11,014 --> 00:00:16,002
이제 여러분이 왜 알고리즘을 배우려는지
이 과정을 통해 얻어가려는 내용이

4
00:00:16,002 --> 00:00:21,005
무엇인지 간단하게 이야기를
시작해보도록 하겠습니다.

5
00:00:21,005 --> 00:00:26,543
그렇다면, 이 과목은 무엇일까요?
이 과목에서는 알고리즘에 대해 중급 수준으로

6
00:00:26,543 --> 00:00:31,062
살펴봅니다. 실제 프로그램이 동작하는 
상황에서 프로그래밍을 하고 문제를 해결하는

7
00:00:31,062 --> 00:00:35,870
과정에 집중하겠으며, 두가지에
초점을 맞추겠는데,

8
00:00:35,870 --> 00:00:41,756
첫번째는 문제를 해결하는 방편으로서의 
알고리즘이고 두번째는 문제 자체와

9
00:00:41,756 --> 00:00:46,651
손으로 알고리즘 작성하여 문제를 해결하는
과정에 있어, 문제와 관련된 정보를 저장하는

10
00:00:46,651 --> 00:00:51,600
자료구조입니다.  이 과목에서는 전체적으로
1부와 2부로 나누어 기본주제를

11
00:00:51,600 --> 00:00:56,559
진행하겠습니다. 첫번째 부분은 데이터 형식
정렬과 검색입니다.  스택, 큐, 백,

12
00:00:56,559 --> 00:01:00,810
우선순위 큐를 고려한 모든 기본적인 방법에
대한 수많은 자료구조와 알고리즘을

13
00:01:00,810 --> 00:01:05,811
알고리즘을 고려하도록 하겠습니다.
그 다음 순서대로 정렬하고, 위치시키는

14
00:01:05,811 --> 00:01:09,852
기존의 알고리즘을 고려하도록 
하겠습니다. 이것이 바로 퀵 정렬,

15
00:01:09,852 --> 00:01:15,130
머지 정렬, 힙 정렬, 기수 정렬radix sort입니다. 다음
탐색에 대한 전통 방식을 살펴보겠는데

16
00:01:15,130 --> 00:01:19,932
여기에는 이진 검색 트리, 레드 블랙 
이진 검색 트리 그리고

17
00:01:19,932 --> 00:01:25,166
해시 테이블이 있습니다. 이 과목의 2부에서는
그래프 알고리즘, 기존의 그래프 검색 알고리즘

18
00:01:25,166 --> 00:01:30,425
최소 신장 트리, 최단 경로 검색, 
정규 표현식과 데이터 압축 등의

19
00:01:30,425 --> 00:01:35,417
문자열 처리 알고리즘을 포함한
고급 검색 알고리즘을 좀 더

20
00:01:35,417 --> 00:01:41,178
살펴보겠습니다. 그런 후, 이 과정 이전에
개발한 기본 알고리즘을 활용하여 만든

21
00:01:41,178 --> 00:01:46,890
고급 알고리즘 일부도 살펴보겠습니다.
흠, 왜 우리는 알고리즘을 공부해야 

22
00:01:46,890 --> 00:01:52,075
할까요? 입력이 있으면, 이에 대한 영향이
널리 퍼집니다.

23
00:01:52,075 --> 00:01:57,185
인터넷에서 시작해서, 생물학,
상업 전산, 컴퓨터 그래픽,

24
00:01:57,185 --> 00:02:02,512
보안, 멀티미디어, 사회망,
과학 응용, 알고리즘 등 여러 곳에서

25
00:02:02,512 --> 00:02:07,805
두루 쓰입니다. 영화와 비디오 게임에서
입자 충돌 시뮬레이션 할 때도

26
00:02:07,805 --> 00:02:12,910
쓰이고, 유전자를 연구할때도 사용하며
기타 등등 여러가지 활용 분야에서도

27
00:02:12,910 --> 00:02:18,319
쓰입니다. 따라서 알고리즘을 배우는
중요한 이유라면, 이것이 영향을 주는

28
00:02:18,319 --> 00:02:23,329
분야가 상당히 넓기 때문입니다.
알고리즘은 공부하기에 상당히 흥미로운데,

29
00:02:23,329 --> 00:02:28,064
옛 것의 근본을 가지고 있기 때문입니다.
이제 최소한 기원전 300년의 유클리드 시대로

30
00:02:28,064 --> 00:02:32,588
거슬러 올라가보겠습니다. 이 때의
알고리즘 개념은 바로 여기 플린스턴에서

31
00:02:32,588 --> 00:02:37,651
1930년대에 Church와 Turing이 정규화했습니다.
다만 우리가 살펴볼 대부분의 알고리즘은

32
00:02:37,651 --> 00:02:41,806
최근 수십년 사이에 발견했습니다.
사실 이런 교과 과정에서 

33
00:02:41,806 --> 00:02:46,452
학부생이 발견한 알고리즘이 있기도 합니다.
그리고 여러분과 같은 학생이 발견할 수 있는

34
00:02:46,452 --> 00:02:51,595
수많은 알고리즘이 아직 있습니다.
여러 사람이 알고리즘을 배우는 주된 이유는

35
00:02:51,595 --> 00:02:57,239
아직 해결하지 못한 문제를
해결할 수 있게 하기

36
00:02:57,239 --> 00:03:02,498
위함입니다. 예를 들어, 첫 시간에는
네트워크 연결 문제에 대해

37
00:03:02,498 --> 00:03:07,234
이야기 할텐데, 여기에는 서로 짝을 지어 연결된
거대한 요소집단이 주어졌고,

38
00:03:07,234 --> 00:03:12,135
한 지점에서 출발하여 다른 지점으로
연결을 타고 경로를 따라 이동하는

39
00:03:12,135 --> 00:03:17,134
방법이 있습니다. 이 예제에서 볼 수 있듯
어떤 방식으로 경로가 

40
00:03:17,134 --> 00:03:22,282
확실하지 않습니다. 이 문제를 해결하려면,
컴퓨터가 필요한데, 사실

41
00:03:22,282 --> 00:03:28,793
이를 해결하려 효율적인 알고리즘이 필요합니다.
이 경우 답은 여러 경로가 있다는

42
00:03:28,793 --> 00:03:34,241
것입니다. 알고리즘을 배우는
또다른 이유는 지적

43
00:03:34,241 --> 00:03:39,795
자극을 위해서입니다. 알고리즘은
학습하기 매우 흥매로운 대상입니다.

44
00:03:39,795 --> 00:03:45,275
알고리즘에 대해 상당한 분량의 책을 
펴냈으며 이 분야의 선구자인 Don Knuth는

45
00:03:45,275 --> 00:03:50,553
"알고리즘은 믿는 대상을 보여야
한다."라고 했습니다. 알고리즘으로

46
00:03:50,553 --> 00:03:55,998
무언가를 해야 하는 것에 대해 바로
생각하진 못합니다. Francis Sullivan은,

47
00:03:55,998 --> 00:04:01,412
"위대한 알고리즘은 전산 처리의 시(詩)다."
이 말처럼 간결하고 알쏭달쏭하며,

48
00:04:01,412 --> 00:04:05,905
밀집되어 있고 심지어는 불가사의하기
까지합니다. 그러나 이 수수께끼를 풀면,

49
00:04:05,905 --> 00:04:11,473
전산 처리의 일부로서, 찬란한 빛을
발할 것입니다. 알고리즘은 지적 자극을

50
00:04:11,473 --> 00:04:17,057
주는데 흥미있습니다. 여러 사람이
알고리즘을 배우는 또 다른 이유로,

51
00:04:17,057 --> 00:04:21,565
대부분의 여러분을 짐작하건대,
좋은 알고리즘, 효율적인

52
00:04:21,565 --> 00:04:26,760
알고리즘, 유능한 프로그래머가 되기 위한
좋은 데이터 구조를 이해하려 함에 있습니다.

53
00:04:26,760 --> 00:04:31,358
린, 리눅스 커널을 만든 리누스 토발즈가,
어떤 사람 자신의 코드 또는 자료구조가

54
00:04:31,358 --> 00:04:36,708
얼마나 중요한지 따지느냐의 여부에 따라
나쁜  프로그래머와 좋은 프로그래머의

55
00:04:36,708 --> 00:04:41,739
중요한 차이가 갈린다고 했습니다. 나쁜 
프로그래머는 코드를 따지지만, 좋은

56
00:04:41,739 --> 00:04:45,943
프로그래머는 자료구조와 구조간의
관계를 따집니다. 그리고 여기에 제가

57
00:04:45,943 --> 00:04:50,048
알고리즘과 처리를 추가하겠습니다.
또 다른 컴퓨터 공학계 선두주자인 Niklaus Wirth는

58
00:04:50,048 --> 00:04:55,438
Algorithms + Data Structures = Programs
라는 흥미로운 책을 펴냈습니다.

59
00:04:55,438 --> 00:05:02,079
[쿨럭]. 최근 알고리즘을 배워야 하는 또 다른
중요한 이유는, 자연스럽기 이해할

60
00:05:02,079 --> 00:05:08,420
일반적인 언어가 되었기 때문입니다.
알고리즘은 계산 모델이며,

61
00:05:08,420 --> 00:05:14,892
알고리즘 모델은 과학 분야에 있어
수학 모델을 대체합니다.

62
00:05:14,892 --> 00:05:20,287
20세기에는 수학자와 과학자들이 
자연 현상을 이해하려

63
00:05:20,287 --> 00:05:25,251
수학 모델을 만들었습니다. 이는 곧 
현상을 풀어나가기 어려운 수학 모델을

64
00:05:25,251 --> 00:05:30,561
명확하게 정립되었습니다. 
자연 현상에 대해 가설을 실험할 수 있는

65
00:05:30,561 --> 00:05:36,011
수단을 만들기에는 어려웠습니다.
따라서 아주 아주 아주 최근에는

66
00:05:36,011 --> 00:05:41,189
여러 사람들이 계산 모델을 만들고 있는데
현상을 더 이해할 수 있도록, 자연에서 일어나는 일을

67
00:05:41,189 --> 00:05:46,568
해당 모델에서 시뮬레이션 합니다.
알고리즘은 이 과정에서

68
00:05:46,568 --> 00:05:52,069
정말로 중요한 동작 역할을 다룹니다.
그리고 이 교과 과정에서 몇가지 예를

69
00:05:52,069 --> 00:05:58,009
살펴보겠습니다. 다른 중요한 이유는,
기술 산업분야에 있어 직업 면접을 보려 할 때,

70
00:05:58,009 --> 00:06:03,067
어떻게 알고리즘과 자료 구조를
효율적으로 활용하는지

71
00:06:03,067 --> 00:06:09,851
그에 대한 영향을 안다면
그렇게 하진 못할 것입니다.

72
00:06:09,851 --> 00:06:15,953
따라서 이런 여러가지 이유로
알고리즘을 배워야 할 이유를 들었습니다.

73
00:06:15,953 --> 00:06:21,761
이들 영향은 매우 광범위하며 널리 퍼지므로,
오래된 근본을 지니고 있고, 새로운 기회가

74
00:06:21,761 --> 00:06:26,175
있습니다. 다른 방식으로는 풀어나갈 수 없는
문제를 해결할 수 있게 하므로,

75
00:06:26,175 --> 00:06:30,003
유능한 프로그래머가 되기 위해
지적 자극 위해 알고리즘을 활용할 수

76
00:06:30,003 --> 00:06:34,049
있습니다.
만물의 삶의 비밀을 풀 수 있으며,

77
00:06:34,049 --> 00:06:38,461
재미와 이득에 최고입니다. 사실,
프로그래머는 아마 왜 다른 내용도

78
00:06:38,461 --> 00:06:42,433
배워야 하는가? 하는 질문을 합니다. 글쎄요.
다른 학문도 배워야 할 몇가지 좋은 이유가 있지만,

79
00:06:42,433 --> 00:06:47,557
알고리즘을 배우지 말아야 할 좋은 이유는
없다는 답을 내놓겠습니다.[쿨럭] 음, 이

80
00:06:47,557 --> 00:06:53,714
과정에서 앞으로 이야기할 두가지 참고서를 제시하고
교과 내용으로 들어가기 전에 여러분들이

81
00:06:53,714 --> 00:06:59,374
알고리즘에 흥미가 있는지 확인해보도록
하겠습니다. 이는 Kevin Wayne 강사와 제가

82
00:06:59,374 --> 00:07:04,472
개발한 출판 모델이며, 몇년 동안 활용해왔고,
이 과목을 수강하는데 있어, 이런 강의에서

83
00:07:04,472 --> 00:07:09,507
여러분들을 도울 수 있는 가장 효과적인
방법이라고 ... 저희는 생각합니다.

84
00:07:09,507 --> 00:07:14,659
근본 이야기로 넘어와서, 이건 이 과목에서
선택적인건데, 교과서가

85
00:07:14,659 --> 00:07:19,887
있습니다. 계속 사용해왔던 교과서이며,
과목의 주제를 넓게 다룹니다.

86
00:07:19,887 --> 00:07:24,285
이 강의에서 이야기 할 수 있는 더 많은 주제가
있습니다. 그리고

87
00:07:24,285 --> 00:07:28,668
교과서를 제공해주기 위해, 책 사이트라고 하는
무료 온라인 자료가 있습니다.

88
00:07:28,668 --> 00:07:33,839
여러분은 해당 책을 살펴볼 수 있으며, 책 사이트에서는
강의 슬라이드도 볼 수 있습니다. 그러나 더 중요한건,

89
00:07:33,839 --> 00:07:39,967
코드, 연습문제, 유용한 자료가 있습니다.
사실,

90
00:07:39,967 --> 00:07:45,329
내용 요약을 포함하여 책에 있는 내용이,
열배 정도 될 터이니,

91
00:07:45,329 --> 00:07:51,211
이 과정을 온라인에서 수강하는 동안
책 사이트를 자주 참고하시는 것이 좋습ㄴ디ㅏ.

92
00:07:51,211 --> 00:07:57,075
여러 사람들이 선행학습을 묻는데요.
어떻게 프로그래밍을 하는지

93
00:07:57,075 --> 00:08:02,820
반복 구문 기초, 배열, 함수가 뭔지 알고 오리라
가정합니다.

94
00:08:02,820 --> 00:08:09,307
또한 그들 중 일부는 객체 지향 프로그래밍이 뭔지
재귀 호출이 뭔지도 안다고 합니다.

95
00:08:09,307 --> 00:08:15,713
Java 언어를 활용하겠습니다만, Java 언어를
깊게 파고 들어가지는 않겠고, 

96
00:08:15,713 --> 00:08:21,546
알고리즘을 설명할 언어로 활용하겠습니다. 약간의
수학 내용을 진행하겠지만, 어려운 내용은 안하겠습니다.

97
00:08:21,546 --> 00:08:27,875
이 과목의 자료에 대해 
자료가 앞서 나가는지 미리 살펴보고 싶다면,

98
00:08:27,875 --> 00:08:33,399
1.1절과 1.2절을 통해
빠르게 살펴볼 수 있습니다.

99
00:08:33,399 --> 00:08:39,110
책 사이트나, 교과서 모두 마찬가집니다.
깊게 다시 살펴보려면,

100
00:08:39,110 --> 00:08:43,722
An Introduction to Programming in Java:
An Interdisciplinary Approach

101
00:08:43,722 --> 00:08:49,338
라는 제대로 된 책이 있습니다. 마찬가지로
책 사이트와 교과서가 있습니다만,

102
00:08:49,338 --> 00:08:53,968
결론을 말하자면, 프로그래밍을 할 수 있어야 하고,
이 과목을 수강하기 위해, 책 사이트에서 설명한대로

103
00:08:53,968 --> 00:08:58,688
프로그래밍 모델을 활용하기 위해서라도
컴퓨터에서 자바 프로그램 작성을

104
00:08:58,688 --> 00:09:03,287
빨리 연습해보셔야 합니다.
과제를 드릴 때 더 자세한 내용을 

105
00:09:03,287 --> 00:09:07,847
말씀드리도록 하겠습니다.
편한 프로그래밍 환경을 구축하든지,

106
00:09:07,847 --> 00:09:13,294
아니면 이 과정에서 요구하는 프로그래밍 환경을
다운로드 할 수 있습니다. 어떻게 하는지는

107
00:09:13,294 --> 00:09:15,039
웹에 절차를 올리도록 하겠습니다.